<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tfjybj.ftdp.provider.dao.TemplateContentDao">

    <!--    添加模板-->
    <insert id="addTemplateContent" >
      INSERT INTO tin_templatecontent(id,
                                      templateId,
                                      componentId,
                                      title,
                                      promptField,
                                      groupSequence
                                     )
      VALUES (#{id},#{templateId},#{componentId},#{title},#{promptField},#{groupSequence})
      ON DUPLICATE KEY UPDATE id= #{id},templateId= #{templateId},componentId= #{componentId},title= #{title},promptField= #{promptField},groupSequence= #{groupSequence}
    </insert>

    <!--    添加模板（插入template表）-->
    <insert id="templateInsert">
        INSERT INTO tin_template (id,
                                  templateName,
                                  templateGroupId,
                                  staffID,
                                  postscript,
                                  isUsable,
                                  groupSequence,
                                  isFinish)
        VALUES (#{id},#{templateName},#{templateGroupId},#{staffID},#{postscript},#{isUsable},#{groupSequence},#{isFinish})
        ON DUPLICATE KEY UPDATE id = #{id},templateName = #{templateName},templateGroupId = #{templateGroupId},staffID = #{staffID},postscript = #{postscript},isUsable = #{isUsable},groupSequence = #{groupSequence},isFinish = #{isFinish}
    </insert>

<!--    &lt;!&ndash;    根据template id编辑模板内容&ndash;&gt;-->
<!--    <update id="updateTemplateContent" >-->
<!--        UPDATE tin_templatecontent-->
<!--        SET templateId = #{templateContentModel.templateId},-->
<!--            componentId = #{templateContentModel.componentId},-->
<!--            title = #{templateContentModel.promptFleld},-->
<!--            titleLength = #{templateContentModel.groupSequence},-->
<!--            inputField = #{templateContentModel.title}-->
<!--        where tin_templatecontent.id = #{id}-->
<!--    </update>-->

    <!--    修改tin_templateContent表isUsable字段完成删除-->
    <update id="templateDelete">
        UPDATE tin_templatecontent
        SET  isUsable = "1"
        WHERE templateId = #{id}
    </update>

    <!--   根据isUsable字段查询tin_templateGroup表可用的模板-->
    <select id="queryTempByIsUsable" resultMap="TempByIsUsableModel" >
        select tin_templategroup.id AS templateGroupId,
               tin_templategroup.templateGroupName AS templateGroupName,
               tin_template.id AS templateId,
               tin_template.templateName AS tempalteName
        from tin_templategroup,
             tin_template
        where tin_template.isUsable = 0
        and   tin_templategroup.isUsable = 0
        and   tin_template.templategroupID = tin_templategroup.id
    </select>
    <resultMap type="com.tfjybj.ftdp.model.TempByIsUsableModel" id="TempByIsUsableModel" autoMapping="true">
        <id property="templateGroupId" column="templateGroupId" />
        <result property="templateGroupName" column="templateGroupName"/>
        <collection property="tempByIsUsableData" ofType="com.tfjybj.ftdp.model.TempByIsUsableData">
            <result property="templateId" column="templateId"/>
            <result property="tempalteName" column="tempalteName"/>
        </collection>
    </resultMap>

    <!--    查询tin_templateContent表-->
    <select id="queryTemplateContent" resultMap="TemplateContent">
        select  id,
                templateId,
                componentId,
                title,
                fieldSequence,
                isUsable,
                groupSequence
        from tin_templatecontent
        where tin_templatecontent.templateId = #{templateId}
        order by
        id asc
    </select>
    <resultMap type="com.tfjybj.ftdp.model.TemplateContent" id="TemplateContent" autoMapping="true">
        <id property="templateId" column="templateId" />

        <collection property="templateContentData" ofType="com.tfjybj.ftdp.model.TemplateContentModel">
            <id property="componentId" column="componentId"/>
            <collection property="templateContentData2" ofType="com.tfjybj.ftdp.model.TemplateContentModel2">
                <result property="id" column="id"/>
                <result property="title" column="title"/>
                <result property="fieldSequence" column="fieldSequence"/>
                <result property="isUsable" column="isUsable"/>
                <result property="groupSequence" column="groupSequence"/>
                <result property="componentId" column="componentId"/>
            </collection>
            <collection property="templateContentTitleModel" ofType="com.tfjybj.ftdp.model.TemplateContentTitleModel">
                <result property="title" column="title"/>
            </collection>
        </collection>
    </resultMap>

    <!--    查询tin_template表-->
    <select id="queryTemplate" resultType="com.tfjybj.ftdp.model.QueryTemplateModel">
        select
                tin_template.id,
                tin_template.templateName,
                tin_template.templateGroupID,
                tin_template.staffID,
                tin_template.postscript,
                tin_template.isUsable,
                tin_template.groupSequence,
                tin_template.isFinish
        from tin_template
        WHERE id = #{id}

    </select>



</mapper>
